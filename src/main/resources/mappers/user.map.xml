<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sethdev.spring_template.repository.UserRepository">

    <resultMap id="User" type="com.sethdev.spring_template.models.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="full_name" property="fullName"/>
        <result column="email" property="email"/>
        <result column="relation_id" property="relationId"/>
        <result column="create_date" property="createDate"
                typeHandler="org.apache.ibatis.type.LocalDateTimeTypeHandler"/>
        <result column="role" property="role"/>
    </resultMap>

    <insert id="save" parameterType="com.sethdev.spring_template.models.User">
        INSERT INTO user (username, password, full_name, email, role)
        VALUES (#{username}, #{password}, #{fullName}, #{email}, #{role})
    </insert>

    <select id="getById" parameterType="Integer" resultMap="User">
        SELECT * FROM user WHERE id = #{id}
    </select>

    <select id="findByUsername" parameterType="String" resultMap="User">
        SELECT * FROM user WHERE username = #{username}
    </select>

    <select id="existsByUsername" parameterType="String" resultType="Boolean">
        SELECT COUNT(0) > 0 FROM user WHERE username = #{username}
    </select>

    <select id="existsByEmail" parameterType="String" resultType="Boolean">
        SELECT COUNT(0) > 0 FROM user WHERE email = #{email}
    </select>

    <select id="getIdByUsername" parameterType="String" resultType="Integer">
        SELECT id FROM user WHERE username = #{username}
    </select>

    <select id="getIdByEmail" parameterType="String" resultType="Integer">
        SELECT id FROM user WHERE email = #{email}
    </select>

    <select id="getUsersByGroupId" resultMap="User" parameterType="Integer">
        SELECT u.id, u.username, u.full_name, u.email, u.relation_id, r.name `role`
        FROM user u
        INNER JOIN sys_relation sr ON sr.user_id = u.id
        INNER JOIN role r ON r.id = sr.role_id
        <where>
            sr.group_id = #{groupId}
            <if test="query.fullName != null and query.fullName != ''">
                <bind name="likeFullName" value="'%' + query.fullName + '%'"/>
                AND LOWER(u.full_name) LIKE LOWER(#{likeFullName})
            </if>
            <if test="query.roleId != null and query.roleId != ''">
                AND sr.role_id = #{query.roleId}
            </if>
        </where>
        ORDER BY u.relation_id DESC
        LIMIT #{start}, #{limit}
    </select>

    <select id="getUsersByGroupIdCount" resultType="Integer" parameterType="Integer">
        SELECT COUNT(0)
        FROM user u
        INNER JOIN sys_relation sr ON sr.user_id = u.id
        INNER JOIN role r ON r.id = sr.role_id
        <where>
            sr.group_id = #{groupId}
            <if test="query.fullName != null and query.fullName != ''">
                <bind name="likeFullName" value="'%' + query.fullName + '%'"/>
                AND LOWER(u.full_name) LIKE LOWER(#{likeFullName})
            </if>
            <if test="query.roleId != null and query.roleId != ''">
                AND sr.role_id = #{query.roleId}
            </if>
        </where>
    </select>

    <update id="updateDetails" parameterType="com.sethdev.spring_template.models.User">
        UPDATE user
        SET username = #{username},
        full_name = #{fullName},
        email = #{email}
        WHERE id = #{id}
    </update>

    <update id="updatePassword" parameterType="com.sethdev.spring_template.models.User">
        UPDATE user SET password = #{password} WHERE id = #{id}
    </update>

</mapper>